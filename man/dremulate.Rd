% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dremulate.R
\name{dremulate}
\alias{dremulate}
\title{Simulate Temporal Events with Duration Relational Event Model (DREM)}
\usage{
dremulate(
  start_effects,
  end_effects,
  start_params,
  end_params,
  num_actors,
  num_events,
  dur_undirected = FALSE,
  event_threshold = NULL
)
}
\arguments{
\item{start_effects}{formula object:  a symbolic description of the effects to
simulate the start model of DREM. see 'Details' for
the available effects and their corresponding statistics}

\item{end_effects}{formula object:  a symbolic description of the effects to
simulate the end model of DREM. see 'Details' for
the available effects and their corresponding statistics}

\item{num_actors}{Integer, number of actors in the network.}

\item{num_events}{Integer, maximum number of events to simulate.}

\item{dur_undirected}{[Optional] Logical, if TRUE, riskset for the duration model needs to be undirected. See details}

\item{event_threshold}{[Optional] Integer, maximum number of  incomplete start or end 
events to simulate before stopping the simulation}
}
\value{
\describe{
\item{edgelist}{data.frame object with columns (start_time,sender,receiver,end_time)}
\item{evls}{matrix containing the event list  with columns (dyad,start_time,end_time) where dyad represents the index of the dyad or the (sender,receiver) pair in the riskset}
\item{riskset}{pair of sender,receiver ids corresponding to dyad index in the riskset}
}
}
\description{
A function to simulate relational event data by sampling from a
tie based duration relational event model.
}
\details{
A list of available effects for the start and end models of DREM can be obtained with \code{\link[remstats:tie_effects]{remstats::tie_effects()}} and
for a list of undirected effects \code{\link[remstats:tie_effects]{remstats::tie_effects(directed = FALSE)}}
}
\examples{
# Define effects for the start and end model of DREM
start_effects <- ~ 1 + remstats::inertia(scaling = "std") + remstats::reciprocity(scaling = "std")
end_effects <- ~ 1 + remstats::outdegreeSender(scaling = "std")

# Set model parameters
start_params <- c(-7, 0.2, 0.1)
end_params <- c(-4, -0.2)

# Run the simulation with specified parameters
drem::dremulate(start_effects, end_effects, start_params, end_params, num_actors = 10, num_events = 1000, event_threshold = 1500)
}
