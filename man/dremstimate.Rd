% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dremstimate.R
\name{dremstimate}
\alias{dremstimate}
\title{Function to estimate duration relational event model (DREM)}
\usage{
dremstimate(
  start_effects,
  end_effects,
  edgelist,
  dur_undirected = FALSE,
  strip_return = TRUE
)
}
\arguments{
\item{start_effects}{formula object for remstats, used to compute the start statistics}

\item{end_effects}{formula object for remstats, used to compute the end statistics}

\item{edgelist}{data.frame with columns (start_time, sender, receiver, end_time)}

\item{dur_undirected}{Logical, if TRUE, riskset for the duration model needs to be undirected. See details}

\item{strip_return}{Logical, if TRUE then strip the heavy elements from a glm output object}

\item{actors}{Vector, character vector of actor names}
}
\description{
Function to estimate duration relational event model (DREM)
}
\details{
dur_undirected is set to TRUE if riskset for the duration model needs to be undirected. i.e if dyad A->B is in an event, the undirected dyad (AB==BA) is at risk to end the event. This argument can be used when it is not directly observable whether the sender or receiver ended the event
}
\examples{

# Define effects for the start and end model of DREM
start_effects <- ~ 1 + remstats::inertia(scaling = "std") + remstats::reciprocity(scaling = "std")
end_effects <- ~ 1 + remstats::outdegreeSender(scaling = "std")

Fit a DREM model
drem::dremstimate(start_effects, end_effects, dat$edgelist)

}
